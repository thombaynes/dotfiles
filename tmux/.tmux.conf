#### CUSTOM BINDINGS
# remap prefix from 'C-b' to 'C-Space'
unbind C-b
set -g prefix C-Space
bind-key Space send-prefix
# Reload Tmux config with C-r
bind-key R source-file ~/.tmux.conf \; display-message "TMUX CONFIG RELOADEDAD"
# Restart Rails server
bind-key r run-shell "touch tmp/restart.txt"\; display-message "RESTART RAILS"

#### GENERAL SETTINGS
# Prefer a real emacs over limited VIM option that is the default. Basically want it to feel like a terminal.
set -g status-keys "emacs"
# Make sure ESC key in VIM is fast - default has a delay
set -s escape-time 0
# Enable mouse mode (tmux 2.1 and above)
# set -g mouse on # decided to be hardcode and force keyboard


#### SCROLL MODE SETTINGS
# Scroll mode has vi binding. Run list-keys -T copy-mode-vi to see list of commands
set-window-option -g mode-keys vi
## The block below doesn't work. Not going to troubleshoot now.
# Setup 'v' to begin selection as in Vim
#bind-key -t vi-copy v begin-selection
#bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
# Update default binding of `Enter` to also use copy-pipe
#unbind -t vi-copy Enter
#bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
## End of broken block


#### UI SETTINGS
# I think iTerm2 does this for me, but allows more colours.
set -g default-terminal "screen-256color"
# Colors that are less blinding
set-option -g status-bg '#666666'
set-option -g status-fg '#aaaaaa'
# More room to display session name
set-option -g status-left-length 50
# Date and time on the right
set-option -g status-right " #(date '+%a, %b %d - %I:%M') "


#### WINDOW MANAGEMENT
# Make new windows at the current path
bind c new-window -c '#{pane_current_path}'
# Start windows and panes at 1, not 0
set-option -g base-index 1
set-option -g renumber-windows on
setw -g pane-base-index 1


#### PANE MANAGEMENT
# split panes using \ and -, at the current path (also unbind defaults)
bind-key \\ split-window -h -c '#{pane_current_path}'
bind-key - split-window -v -c '#{pane_current_path}'
unbind '"'
unbind %
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
# Break pane out into a separate window
bind-key b break-pane -d
# Fine adjustment (1 or 2 cursor cells per bump)
bind -n S-Left resize-pane -L 5
bind -n S-Right resize-pane -R 5
bind -n S-Down resize-pane -D 5
bind -n S-Up resize-pane -U 5
# Coarse adjustment (5 or 10 cursor cells per bump)
# bind -n C-Left resize-pane -L 10 #busted
# bind -n C-Right resize-pane -R 10 #busted
# bind -n C-Down resize-pane -D 5
# bind -n C-Up resize-pane -U 5


#### VIM SETTINGS
# Turned on to allow VIM to automatically reload files when changed outside of VIM.
set -g focus-events on
